Tim:
* hlvm syntax module exports a set of keywords, say, c-syntax-module exports keyword if, while, for, struct ...
* hlvm library exports variable and function definitions.
* A hlvm syntax module depends on zero or more hlvm syntax modules.
* A hlvm library depends on zero or more hlvm syntax modules and hlvm libraries.
* Everytime we need a hlvm list handler, we create a keyword.
* If we don't need a hlvm list handler, we don't use a keyword. Minimize the number of them.
* `ret` is the name of return variable in a function. It's reserved, like `this` in C++ member function.
* Template will be added finally. I promise.

Jay:
* .hl files should be easy to generate regardless of how hard it can be written by human.
* Then it has to be somewhat readable.
* It cannot be ambigious. The only thing making it ambigious is keyword confliction.
* Less keywords is better.
* It should be concise.
